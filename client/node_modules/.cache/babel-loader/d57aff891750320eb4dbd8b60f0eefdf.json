{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Projet-main\\\\client\\\\src\\\\Components\\\\register\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Button, Alert, Spinner } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { register } from '../../js/actions/userActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const registerUser = e => {\n    e.preventDefault();\n    const newUser = {\n      name,\n      lastName,\n      email,\n      password\n    };\n    dispatch(register(newUser));\n  };\n\n  const {\n    isAuth,\n    loading,\n    errors\n  } = useSelector(state => state.userReducer);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" col-md-7  mt-3 mx-auto\",\n    children: [errors.id === \"register\" && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: errors.err[0].msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 43\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\",\n      role: \"status\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"sr-only\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 27\n    }, this) : isAuth ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 35\n    }, this) : /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter your Name\",\n          onChange: e => setName(e.target.value),\n          value: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter your Last Name\",\n          onChange: e => setLastName(e.target.value),\n          value: lastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Enter email\",\n          onChange: e => setEmail(e.target.value),\n          value: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Password\",\n          onChange: e => setPassword(e.target.value),\n          value: password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        className: \"submit\",\n        onClick: registerUser,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"x+PRYpxsTpGfMtdC1FAli0D2LiA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/Projet-main/client/src/Components/register/Register.js"],"names":["React","useState","Form","Button","Alert","Spinner","useDispatch","useSelector","Redirect","register","Register","email","setEmail","password","setPassword","name","setName","lastName","setLastName","dispatch","registerUser","e","preventDefault","newUser","isAuth","loading","errors","state","userReducer","id","err","msg","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Form, Button, Alert, Spinner } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { register } from '../../js/actions/userActions';\n\n\nconst Register = () => {\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [name, setName] = useState(\"\")\n    const [lastName, setLastName] = useState(\"\")\n    const dispatch = useDispatch()\n    const registerUser = (e) => {\n        e.preventDefault()\n        const newUser = { name, lastName, email, password }\n        dispatch(register(newUser))\n    }\n\n    const { isAuth, loading ,errors } = useSelector(state => state.userReducer)\n\n    return (\n        <div className=\" col-md-7  mt-3 mx-auto\" >\n            { errors.id === \"register\" && <Alert variant=\"danger\">{  errors.err[0].msg}</Alert>} \n            {\n                loading ? <Spinner animation=\"border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </Spinner> : isAuth ? <Redirect to=\"/profile\" /> :\n                    <Form>\n                        <Form.Group>\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Enter your Name\" onChange={e => setName(e.target.value)} value={name} />\n\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.Label>Last Name</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Enter your Last Name\" onChange={e => setLastName(e.target.value)} value={lastName} />\n\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.Label>Email address</Form.Label>\n                            <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={e => setEmail(e.target.value)} value={email} />\n\n                        </Form.Group>\n\n                        <Form.Group >\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control type=\"password\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)} value={password} />\n                        </Form.Group>\n\n                        <Button variant=\"primary\" type=\"submit\" className=\"submit\" onClick={registerUser} >\n                            Submit\n                        </Button>\n                    </Form>\n            }\n        </div>\n    )\n}\n\nexport default Register\n"]},"metadata":{},"sourceType":"module"}