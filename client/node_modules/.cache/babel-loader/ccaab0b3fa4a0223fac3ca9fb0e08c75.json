{"ast":null,"code":"import { REGISTER_SUCCESS, REGISTER_FAIL, REGISTER_USER, LOGIN_USER, GET_PROFILE_USER, LOGIN_SUCCESS, LOGIN_FAIL, GET_PROFILE_SUCCESS, GET_PROFILE_FAIL, LOGOUT, UPDATE_USER_SUCCESS, UPDATE_USER, UPDATE_USER_FAIL, DELETE_USER, DELETE_USER_SUCCESS, DELETE_USER_FAIL } from \"../const/actionTypes\";\nconst initialState = {\n  user: null,\n  loading: false,\n  token: null,\n  isAuth: null,\n  errors: {},\n  users: []\n};\n\nconst userReducer = (state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case REGISTER_USER:\n    case LOGIN_USER:\n    case UPDATE_USER:\n    case GET_PROFILE_USER:\n      return { ...state,\n        loading: true\n      };\n\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      return { ...state,\n        loading: false,\n        token: payload.token,\n        user: payload.user,\n        isAuth: true\n      };\n\n    case UPDATE_USER_SUCCESS:\n      return { ...state,\n        loading: false,\n        users: state.users.map(user => user._id === payload._id ? { ...user,\n          ...payload\n        } : user)\n      };\n\n    case UPDATE_USER_FAIL:\n      return { ...state,\n        errors: payload\n      };\n\n    case DELETE_USER:\n      return { ...state,\n        loading: true\n      };\n\n    case DELETE_USER_SUCCESS:\n      return { ...state,\n        loading: false,\n        users: state.users.filter(user => user._id !== payload._id)\n      };\n\n    case DELETE_USER_FAIL:\n      return { ...state,\n        errors: payload\n      };\n\n    case GET_PROFILE_SUCCESS:\n      return { ...state,\n        loading: false,\n        user: payload.user,\n        isAuth: true\n      };\n\n    case REGISTER_FAIL:\n    case GET_PROFILE_FAIL:\n    case LOGIN_FAIL:\n      return { ...state,\n        loading: false,\n        isAuth: false,\n        errors: payload\n      };\n\n    case LOGOUT:\n      return { ...state,\n        user: null,\n        isAuth: false,\n        token: null\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["C:/Users/USER/Desktop/Projet-main/client/src/js/reducers/userReducer.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","REGISTER_USER","LOGIN_USER","GET_PROFILE_USER","LOGIN_SUCCESS","LOGIN_FAIL","GET_PROFILE_SUCCESS","GET_PROFILE_FAIL","LOGOUT","UPDATE_USER_SUCCESS","UPDATE_USER","UPDATE_USER_FAIL","DELETE_USER","DELETE_USER_SUCCESS","DELETE_USER_FAIL","initialState","user","loading","token","isAuth","errors","users","userReducer","state","type","payload","map","_id","filter"],"mappings":"AAAA,SACEA,gBADF,EAEEC,aAFF,EAGEC,aAHF,EAIEC,UAJF,EAKEC,gBALF,EAMEC,aANF,EAOEC,UAPF,EAQEC,mBARF,EASEC,gBATF,EAUEC,MAVF,EAWEC,mBAXF,EAYEC,WAZF,EAaEC,gBAbF,EAcEC,WAdF,EAeEC,mBAfF,EAgBEC,gBAhBF,QAiBO,sBAjBP;AAmBA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,IADa;AAEnBC,EAAAA,OAAO,EAAE,KAFU;AAGnBC,EAAAA,KAAK,EAAE,IAHY;AAInBC,EAAAA,MAAM,EAAE,IAJW;AAKnBC,EAAAA,MAAM,EAAE,EALW;AAMnBC,EAAAA,KAAK,EAAC;AANa,CAArB;;AASA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuB;AAAES,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAvB,KAA6C;AAC/D,UAAQD,IAAR;AACE,SAAKvB,aAAL;AACA,SAAKC,UAAL;AACA,SAAKQ,WAAL;AACA,SAAKP,gBAAL;AACE,aAAO,EAAE,GAAGoB,KAAL;AAAYN,QAAAA,OAAO,EAAE;AAArB,OAAP;;AAEF,SAAKlB,gBAAL;AACA,SAAKK,aAAL;AACE,aAAO,EACL,GAAGmB,KADE;AAELN,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,KAAK,EAAEO,OAAO,CAACP,KAHV;AAILF,QAAAA,IAAI,EAAES,OAAO,CAACT,IAJT;AAKLG,QAAAA,MAAM,EAAE;AALH,OAAP;;AAQF,SAAKV,mBAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELN,QAAAA,OAAO,EAAE,KAFJ;AAGLI,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYK,GAAZ,CAAiBV,IAAD,IACrBA,IAAI,CAACW,GAAL,KAAaF,OAAO,CAACE,GAArB,GAA2B,EAAE,GAAGX,IAAL;AAAW,aAAGS;AAAd,SAA3B,GAAqDT,IADhD;AAHF,OAAP;;AAOF,SAAKL,gBAAL;AACE,aAAO,EAAE,GAAGY,KAAL;AAAYH,QAAAA,MAAM,EAAEK;AAApB,OAAP;;AAEF,SAAKb,WAAL;AACE,aAAO,EAAE,GAAGW,KAAL;AAAYN,QAAAA,OAAO,EAAE;AAArB,OAAP;;AACF,SAAKJ,mBAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELN,QAAAA,OAAO,EAAE,KAFJ;AAGLI,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYO,MAAZ,CAAoBZ,IAAD,IAAUA,IAAI,CAACW,GAAL,KAAaF,OAAO,CAACE,GAAlD;AAHF,OAAP;;AAKF,SAAKb,gBAAL;AACE,aAAO,EAAE,GAAGS,KAAL;AAAYH,QAAAA,MAAM,EAAEK;AAApB,OAAP;;AAEF,SAAKnB,mBAAL;AACE,aAAO,EAAE,GAAGiB,KAAL;AAAYN,QAAAA,OAAO,EAAE,KAArB;AAA4BD,QAAAA,IAAI,EAAES,OAAO,CAACT,IAA1C;AAAgDG,QAAAA,MAAM,EAAE;AAAxD,OAAP;;AAEF,SAAKnB,aAAL;AACA,SAAKO,gBAAL;AACA,SAAKF,UAAL;AACE,aAAO,EAAE,GAAGkB,KAAL;AAAYN,QAAAA,OAAO,EAAE,KAArB;AAA4BE,QAAAA,MAAM,EAAE,KAApC;AAA2CC,QAAAA,MAAM,EAAEK;AAAnD,OAAP;;AAEF,SAAKjB,MAAL;AACE,aAAO,EAAE,GAAGe,KAAL;AAAYP,QAAAA,IAAI,EAAE,IAAlB;AAAwBG,QAAAA,MAAM,EAAE,KAAhC;AAAuCD,QAAAA,KAAK,EAAE;AAA9C,OAAP;;AACF;AACE,aAAOK,KAAP;AAlDJ;AAoDD,CArDD;;AAuDA,eAAeD,WAAf","sourcesContent":["import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  REGISTER_USER,\n  LOGIN_USER,\n  GET_PROFILE_USER,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  GET_PROFILE_SUCCESS,\n  GET_PROFILE_FAIL,\n  LOGOUT,\n  UPDATE_USER_SUCCESS,\n  UPDATE_USER,\n  UPDATE_USER_FAIL,\n  DELETE_USER,\n  DELETE_USER_SUCCESS,\n  DELETE_USER_FAIL,\n} from \"../const/actionTypes\";\n\nconst initialState = {\n  user: null,\n  loading: false,\n  token: null,\n  isAuth: null,\n  errors: {},\n  users:[]\n};\n\nconst userReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case REGISTER_USER:\n    case LOGIN_USER:\n    case UPDATE_USER:\n    case GET_PROFILE_USER:\n      return { ...state, loading: true };\n\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        token: payload.token,\n        user: payload.user,\n        isAuth: true,\n      };\n\n    case UPDATE_USER_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        users: state.users.map((user) =>\n          user._id === payload._id ? { ...user, ...payload } : user\n        ),\n      };\n    case UPDATE_USER_FAIL:\n      return { ...state, errors: payload };\n\n    case DELETE_USER:\n      return { ...state, loading: true };\n    case DELETE_USER_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        users: state.users.filter((user) => user._id !== payload._id),\n      };\n    case DELETE_USER_FAIL:\n      return { ...state, errors: payload };\n\n    case GET_PROFILE_SUCCESS:\n      return { ...state, loading: false, user: payload.user, isAuth: true };\n\n    case REGISTER_FAIL:\n    case GET_PROFILE_FAIL:\n    case LOGIN_FAIL:\n      return { ...state, loading: false, isAuth: false, errors: payload };\n\n    case LOGOUT:\n      return { ...state, user: null, isAuth: false, token: null };\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n"]},"metadata":{},"sourceType":"module"}