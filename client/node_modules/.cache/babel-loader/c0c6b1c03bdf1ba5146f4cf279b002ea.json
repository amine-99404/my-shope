{"ast":null,"code":"import axios from 'axios';\nimport { REGISTER_USER, REGISTER_SUCCESS, REGISTER_FAIL, LOGIN_USER, LOGIN_FAIL, LOGIN_SUCCESS, GET_PROFILE_USER, GET_PROFILE_SUCCESS, GET_PROFILE_FAIL, LOGOUT, UPDATE_USER, UPDATE_USER_SUCCESS, UPDATE_USER_FAIL, DELETE_USER, DELETE_USER_SUCCESS, DELETE_USER_FAIL } from '../const/actionTypes';\nexport const register = newUser => async dispatch => {\n  // newUser = {email,name,lastName,password}\n  dispatch({\n    type: REGISTER_USER\n  });\n\n  try {\n    const {\n      data\n    } = await axios.post('/api/auth/register', newUser);\n    localStorage.setItem(\"token\", data.token);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: REGISTER_FAIL,\n      payload: {\n        err: error.response.data,\n        id: \"register\"\n      }\n    }); //  alert(error.response.data[0].msg)\n  }\n};\nexport const login = User => async dispatch => {\n  // User = {email,password}\n  dispatch({\n    type: LOGIN_USER\n  });\n\n  try {\n    const {\n      data\n    } = await axios.post('/api/auth/login', User);\n    localStorage.setItem(\"token\", data.token);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: {\n        err: error.response.data,\n        id: \"login\"\n      }\n    }); // alert(error.response.data[0].msg)\n  }\n};\nexport const modifiedUser = (id, formData) => async dispatch => {\n  dispatch({\n    type: UPDATE_USER\n  });\n\n  try {\n    const {\n      data\n    } = await axios.put(`/api/auth/update_user/${id}`, formData);\n    dispatch({\n      type: UPDATE_USER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_USER_FAIL // payload: error.response.data\n\n    });\n  }\n};\nexport const deleteUser = id => async dispatch => {\n  // User { name , lastName , email , password}\n  dispatch({\n    type: DELETE_USER\n  });\n\n  try {\n    const {\n      data\n    } = await axios.delete(`/api/auth/delete_user/${id}`);\n    dispatch({\n      type: DELETE_USER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: DELETE_USER_FAIL,\n      payload: error.response.data\n    });\n  }\n};\nexport const getProfile = () => async dispatch => {\n  // User = {email,password}\n  dispatch({\n    type: GET_PROFILE_USER\n  });\n\n  try {\n    const token = localStorage.getItem(\"token\");\n    const config = {\n      headers: {\n        Authorization: token\n      }\n    };\n    console.log(config);\n    const {\n      data\n    } = await axios.get('/api/auth/current_user', config);\n    dispatch({\n      type: GET_PROFILE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_PROFILE_FAIL,\n      payload: error.response.data\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"token\");\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"sources":["C:/Users/USER/Desktop/Projet-main/client/src/js/actions/userActions.js"],"names":["axios","REGISTER_USER","REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_USER","LOGIN_FAIL","LOGIN_SUCCESS","GET_PROFILE_USER","GET_PROFILE_SUCCESS","GET_PROFILE_FAIL","LOGOUT","UPDATE_USER","UPDATE_USER_SUCCESS","UPDATE_USER_FAIL","DELETE_USER","DELETE_USER_SUCCESS","DELETE_USER_FAIL","register","newUser","dispatch","type","data","post","localStorage","setItem","token","payload","error","err","response","id","login","User","modifiedUser","formData","put","deleteUser","delete","getProfile","getItem","config","headers","Authorization","console","log","get","logout","removeItem"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport {\n    REGISTER_USER, REGISTER_SUCCESS, REGISTER_FAIL,\n    LOGIN_USER, LOGIN_FAIL, LOGIN_SUCCESS, GET_PROFILE_USER,\n    GET_PROFILE_SUCCESS, GET_PROFILE_FAIL, LOGOUT,\n     UPDATE_USER, UPDATE_USER_SUCCESS, UPDATE_USER_FAIL, DELETE_USER, DELETE_USER_SUCCESS, DELETE_USER_FAIL\n} from '../const/actionTypes'\n\n\nexport const register = (newUser) => async dispatch => {\n    // newUser = {email,name,lastName,password}\n    dispatch({\n        type: REGISTER_USER\n    })\n    try {\n        const { data } = await axios.post('/api/auth/register', newUser);\n        localStorage.setItem(\"token\", data.token)\n        dispatch({\n            type: REGISTER_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        dispatch({\n            type: REGISTER_FAIL,\n            payload: { err: error.response.data, id: \"register\" }\n        });\n        //  alert(error.response.data[0].msg)\n    }\n}\n\nexport const login = (User) => async dispatch => {\n    // User = {email,password}\n    dispatch({\n        type: LOGIN_USER\n    })\n    try {\n        const { data } = await axios.post('/api/auth/login', User);\n        localStorage.setItem(\"token\", data.token)\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: LOGIN_FAIL,\n            payload: { err: error.response.data, id: \"login\" }\n        });\n        // alert(error.response.data[0].msg)\n    }\n}\n\nexport const modifiedUser = (id ,formData) => async (dispatch) => {\n  \n    dispatch({\n      type: UPDATE_USER,\n    });\n    try {\n      const { data } = await axios.put(`/api/auth/update_user/${id}` ,formData );\n      dispatch({\n        type: UPDATE_USER_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: UPDATE_USER_FAIL,\n        // payload: error.response.data\n      });\n    }\n  };\n\n  export const deleteUser = (id) => async (dispatch) => {\n    // User { name , lastName , email , password}\n    dispatch({\n      type: DELETE_USER,\n    });\n    try {\n      const { data } = await axios.delete(`/api/auth/delete_user/${id}`);\n      dispatch({\n        type: DELETE_USER_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: DELETE_USER_FAIL,\n        payload: error.response.data,\n      });\n    }\n  };\n\nexport const getProfile = () => async dispatch => {\n    // User = {email,password}\n    dispatch({\n        type: GET_PROFILE_USER\n    })\n    try {\n        const token = localStorage.getItem(\"token\");\n        const config = {\n            headers: {\n                Authorization: token\n            }\n        }\n        console.log(config)\n        const { data } = await axios.get('/api/auth/current_user', config)\n        dispatch({\n            type: GET_PROFILE_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: GET_PROFILE_FAIL,\n            payload: error.response.data\n        })\n    }\n};\nexport const logout = () => dispatch => {\n    localStorage.removeItem(\"token\")\n    dispatch({\n        type: LOGOUT\n    })\n}\n\n\n"]},"metadata":{},"sourceType":"module"}